// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'domain/models/doctor.dart';
import 'domain/models/duty.dart';
import 'domain/models/investigation.dart';
import 'domain/models/patient.dart';
import 'domain/models/patient_types.dart';
import 'domain/models/picture.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
    id: const obx_int.IdUid(1, 4852917807247370858),
    name: 'Duty',
    lastPropertyId: const obx_int.IdUid(3, 5901116078796495656),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4380430277146813803),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 7735798921161325028),
        name: 'shift',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 5901116078796495656),
        name: 'day',
        type: 6,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(2, 4159013604071220306),
    name: 'Patient',
    lastPropertyId: const obx_int.IdUid(1735, 3693019878555955125),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 5870955556876021401),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 4558555341828619012),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 8459920102475821432),
        name: 'complaints',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 1410148993886046502),
        name: 'management',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 4160640108529597958),
        name: 'diagnosis',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 1435697079980743643),
        name: 'editing',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 8633550996493087067),
        name: 'gender',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1724, 5157543532971659967),
        name: 'age',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1725, 7164950224513764638),
        name: 'timeOfPresentation',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1726, 3574748973465209300),
        name: 'patientTypeId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(401, 519135671348216003),
        relationTarget: 'PatientType',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1727, 8615082866598714033),
        name: 'examination',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1728, 4252036469638577585),
        name: 'other',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1729, 174065232284118465),
        name: 'attended',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1730, 2302751481148111159),
        name: 'createdAt',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1731, 8057023914287832289),
        name: 'dateOfBirth',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1732, 1607930398169217565),
        name: 'password',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1733, 6365941547950561846),
        name: 'email',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1734, 6845267675090192829),
        name: 'addressId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(406, 7601206646593095265),
        relationTarget: 'Address',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1735, 3693019878555955125),
        name: 'contactId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(407, 9008757180834748715),
        relationTarget: 'Contact',
      ),
    ],
    relations: <obx_int.ModelRelation>[
      obx_int.ModelRelation(
        id: const obx_int.IdUid(398, 6517519126826346293),
        name: 'pictures',
        targetId: const obx_int.IdUid(4, 3618212813481240617),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(399, 1743214526491177128),
        name: 'investigations',
        targetId: const obx_int.IdUid(5, 7853823722967231000),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(401, 2436407489687402963),
        name: 'images',
        targetId: const obx_int.IdUid(13, 5161641165194785664),
      ),
    ],
    backlinks: <obx_int.ModelBacklink>[
      obx_int.ModelBacklink(
        name: 'lesions',
        srcEntity: 'Lesion',
        srcField: 'patient',
      ),
    ],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(3, 2547301185917168288),
    name: 'PatientType',
    lastPropertyId: const obx_int.IdUid(2, 3231231614687725535),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 8590536655539908999),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 3231231614687725535),
        name: 'type',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(4, 3618212813481240617),
    name: 'Picture',
    lastPropertyId: const obx_int.IdUid(2, 379551613868479842),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 57833821240850908),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 379551613868479842),
        name: 'path',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(5, 7853823722967231000),
    name: 'Investigation',
    lastPropertyId: const obx_int.IdUid(3, 8170642712981172191),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 8352170923164623841),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 8298037674913744250),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 8170642712981172191),
        name: 'price',
        type: 6,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(11, 2730524210423073160),
    name: 'Address',
    lastPropertyId: const obx_int.IdUid(6, 5077638576421024113),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 9178199893514192541),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 8112704117608126995),
        name: 'town',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 5254376157474344502),
        name: 'city',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 8087233145196993977),
        name: 'province',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 6954271722954141523),
        name: 'country',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 5077638576421024113),
        name: 'patientId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(402, 6332655043751301224),
        relationTarget: 'Patient',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(12, 467934984137485301),
    name: 'Contact',
    lastPropertyId: const obx_int.IdUid(5, 8490288318953018488),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2742532107848008832),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 7397934120925207473),
        name: 'countryCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 4223508237828957344),
        name: 'mnp',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1656196127636061619),
        name: 'phoneCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 8490288318953018488),
        name: 'patientId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(403, 4087994437577724356),
        relationTarget: 'Patient',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(13, 5161641165194785664),
    name: 'Imagery',
    lastPropertyId: const obx_int.IdUid(3, 572942716503882574),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4552319187278270735),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 4068408845340694939),
        name: 'path',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 572942716503882574),
        name: 'patientId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(404, 5593998050487635336),
        relationTarget: 'Patient',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(14, 7072319298997520916),
    name: 'Lesion',
    lastPropertyId: const obx_int.IdUid(3, 2079546349683303480),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 7383812675198576057),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 3182575701053653425),
        name: 'patterns',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 2079546349683303480),
        name: 'patientId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(405, 4435814748977787614),
        relationTarget: 'Patient',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(15, 1986126359130333200),
    name: 'Doctor',
    lastPropertyId: const obx_int.IdUid(5, 4826083446523773321),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 6311553016821916795),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 1159231214749759481),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 7315247302867442698),
        name: 'description',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 7951330504872670927),
        name: 'email',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 4826083446523773321),
        name: 'password',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[
      obx_int.ModelRelation(
        id: const obx_int.IdUid(400, 899233536932561531),
        name: 'patients',
        targetId: const obx_int.IdUid(2, 4159013604071220306),
      ),
    ],
    backlinks: <obx_int.ModelBacklink>[],
  ),
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore({
  String? directory,
  int? maxDBSizeInKB,
  int? maxDataSizeInKB,
  int? fileMode,
  int? maxReaders,
  bool queriesCaseSensitiveDefault = true,
  String? macosApplicationGroup,
}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(
    getObjectBoxModel(),
    directory: directory ?? (await defaultStoreDirectory()).path,
    maxDBSizeInKB: maxDBSizeInKB,
    maxDataSizeInKB: maxDataSizeInKB,
    fileMode: fileMode,
    maxReaders: maxReaders,
    queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
    macosApplicationGroup: macosApplicationGroup,
  );
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
    entities: _entities,
    lastEntityId: const obx_int.IdUid(15, 1986126359130333200),
    lastIndexId: const obx_int.IdUid(407, 9008757180834748715),
    lastRelationId: const obx_int.IdUid(401, 2436407489687402963),
    lastSequenceId: const obx_int.IdUid(0, 0),
    retiredEntityUids: const [
      3170843549290589094,
      3100444485206174878,
      8523176635418837048,
      2546980977130986071,
      1051753569365857866,
    ],
    retiredIndexUids: const [
      7708117350394255182,
      2996458809549302300,
      2083366646459147865,
      375323230478524479,
      6544662428144047663,
      5545990223496469970,
      3972421442514711823,
      7808807573254372396,
      8937721105929430864,
      1562106970026269534,
      5666474966883840011,
      7652659671876731145,
      7676757481779632723,
      4508086106019863321,
      5133888863206050995,
      3759899296065874048,
      6995681597612649185,
      6262540636430991138,
      180027927574731627,
      665534770680034843,
      8605181414244114025,
      2938406512762770477,
      5104352537934811916,
      6335810184065637040,
      6770343500958329738,
      8047023983848452018,
      5492542818288069749,
      4991321075734110677,
      3791699142324933292,
      3105279668650474338,
      5877295764437722666,
      5807313423095914872,
      1625618007243610427,
      7078377482281529986,
      757203640939382122,
      548812413388763819,
      1197094686787871116,
      4263848674015192571,
      8115767585916619422,
      4326201290852789481,
      8924790501841748720,
      6295400715702651349,
      5405881308710702621,
      9213627736594465503,
      4253283595093425920,
      4729112382731283946,
      8598904572077720384,
      166708776938855676,
      2089320541727530688,
      7289926489660066667,
      8844387954175026934,
      6860836008824335892,
      491629085836869193,
      2901043377399365214,
      3440861622668609418,
      5746094111706740190,
      4859412892757115233,
      950394156581114666,
      7503034918050447444,
      2656114042166065193,
      2215165503799893694,
      2058454550325601669,
      7866778599659508273,
      1867216621207603503,
      6418486247630666537,
      487053583384341305,
      3298200260232978847,
      1143379739274325381,
      8347817420945831270,
      7237126693778463819,
      441011710088970289,
      159232248748307462,
      5788749511709068705,
      6322091479984209434,
      3063230378733162895,
      5403001228601673330,
      1239710947692201789,
      9130661410202897918,
      2848303263644446307,
      1482331521802751473,
      6307411145519716880,
      2901880787573313426,
      2557233193611197890,
      6635588089741543284,
      3037217254172436016,
      1178023749460867843,
      7332079576569920360,
      1911347981692428032,
      5148319348366035038,
      2093169888969631794,
      3989676365323454284,
      2585074948025155429,
      2982748877515531329,
      2097497785533138125,
      1301483589529708552,
      4056711158915185798,
      3870527245346616776,
      8515928989564421946,
      5348064371452671901,
      2684663785110206602,
      689157474400170334,
      5413893126184271692,
      306124900374307170,
      5713010289776840932,
      1122613698627029394,
      469865869694078002,
      6522714859011989154,
      6786469056066869862,
      8804075906466760363,
      5484020557987516076,
      1589589627784730129,
      1104127475228985691,
      4009983147384488133,
      3646392600549311910,
      8361831746990295506,
      7596055305842673367,
      5954330043283693232,
      7899780030593449839,
      5704949433456329290,
      3329897236232891329,
      6750098643693735460,
      4235897359087789618,
      596738095823138486,
      6266875450351488390,
      7097520040650715480,
      1332292488551503871,
      6144637473813560688,
      5678764348134717509,
      3413777809486097989,
      1100951541551711018,
      4638496110558114970,
      1799321510294262731,
      3791578444011857975,
      526761000488365333,
      8605626423006034102,
      157681445615223198,
      4440660787465163757,
      2453770039029965439,
      1609393269951730794,
      3081493258028567475,
      3814144979507741944,
      3324918793912462882,
      2776493918747545708,
      62237050623960259,
      1304420704039215052,
      1415653308491859488,
      915677359370300773,
      1638722874417523185,
      4681758374557561452,
      7660163390309800087,
      1390959776374305411,
      366085932731203302,
      3612750076453676795,
      4273863090939291000,
      2474763576106120770,
      194927528969303040,
      339737298101630778,
      130701940929483528,
      4424503205897232460,
      95252652564734020,
      2852279113091119247,
      7432687386068695779,
      6273996529912635437,
      1671867512132561215,
      5642020607258726220,
      4464069149294519544,
      3374362691428265862,
      6648983304219644748,
      6098945804369165787,
      130111151989148,
      3087546416825014403,
      8518124751896380686,
      3130986199660810307,
      5193596880522049970,
      2302682733582623618,
      3482792821493186072,
      6803790095389455547,
      521398676768964005,
      2807758849286322601,
      2994206368532717496,
      1892044303655421920,
      1315979735992352969,
      424045696894251100,
      4025875051583009340,
      1414875159990817712,
      778181891579275197,
      3587798605615362045,
      2420251302664532117,
      5336084437519483507,
      2824850384748932125,
      4548818912788205335,
      6363043232782310717,
      753591980203453522,
      4191556441351539831,
      8072244837495288106,
      7012564461529756678,
      5324546497373732000,
      6803281659828997126,
      235180747156482974,
      904248388357613195,
      7758653818272287396,
      3790150698858490323,
      7453319644924380772,
      6315746590385237791,
      1188416692547304598,
      3906919690693108191,
      8720969825110207435,
      2400917935201294621,
      1172415243067126209,
      3069495325649424888,
      7394249762212806947,
      3373333059107681005,
      2043033102392320376,
      7369005470757967367,
      5161051603579019157,
      2186121123732175989,
      5231230147289859829,
      3965401840154841721,
      4583215205766515505,
      6935033911245796181,
      543621657566310828,
      103269034863542293,
      1673405069379144205,
      1418821238526091676,
      2973937792442400383,
      548775247302619814,
      7531330658781627415,
      5124044120442380883,
      862175298490542227,
      8211656465211822479,
      2514430816187725392,
      1279284206892356184,
      3390193919861918825,
      4238212432533184266,
      1595211987410739014,
      8835125248994331746,
      5900643415674268070,
      1799493477384950797,
      3316880932915136064,
      3482932958956646148,
      3089914195278250655,
      7570653448315062443,
      3351122357566840560,
      5844488985167183979,
      8195546117585223548,
      5013163912102159399,
      5556944029674326067,
      8264947799068969979,
      3876605930198404785,
      2676229667172436664,
      5128503858211541596,
      1996606155462600009,
      4879430019352297547,
      5638390690853080782,
      1392920953126578244,
      562399030434611780,
      497617428201388304,
      5041375898381551777,
      8539871897679807425,
      8516843888062761024,
      7308820358529741937,
      3308333133436339382,
      6259584636103185230,
      2286798882871193425,
      7595668564933425144,
      8375346480530651693,
      7441120166365874369,
      1199353943561805287,
      7848874614492485242,
      7621935560311395770,
      4220087397303970170,
      2885255426210632805,
      4339336912191026051,
      846472782817810676,
      7330462493088605658,
      4673164288807442917,
      8282255015490109767,
      8951965137538103108,
      1443652024500041841,
      2783685838246368293,
      2396384800311762178,
      3587289577367919973,
      2582407759808444604,
      4893555878065145277,
      1466166203880093657,
      1363730518981245537,
      3434003033273159991,
      1278903690543856381,
      7165828773379669055,
      1643835614676270944,
      8321096800652029882,
      413171593375566342,
      6161920527381851397,
      6962322102513239273,
      1404641396211922335,
      4872081847465529751,
      8715048318500794856,
      7646981067629830424,
      2204327578255937987,
      6024316903496365302,
      3870701652496361812,
      2452598382389442180,
      6866518958039931565,
      3217396984388010644,
      1664628682500042689,
      4719592620903181818,
      4854584733635381201,
      2868707288311956083,
      2029489802704733984,
      4774228699221933916,
      7657576281112130142,
      7294767713331387819,
      2847004602622892146,
      95744075954251678,
      4861801584090281103,
      8806267401724722297,
      4817789138208981274,
      3894458958503966604,
      2204762078290712132,
      3249869686523965321,
      8648795743815501290,
      7279087730411822467,
      8465062907670188142,
      8530816964850282233,
      3764138005245811562,
      8757991701594890323,
      2338949336147971437,
      4218892018073095275,
      2973316240643671227,
      199956621610966574,
      7055907874766643486,
      5524131615060482805,
      8563512862130519683,
      9211624215012609160,
      2158914475727221858,
      426962471872001409,
      505265947267432238,
      444419725538373119,
      4950293626675360749,
      4495742849327679375,
      4054773334764148138,
      1251905321021884489,
      3956425292638187806,
      1181741295416302541,
      8185790787811834150,
      7680416362794631240,
      8551674459174537441,
      3210718984916096172,
      5682417220633561638,
      1859808454312998865,
      689511158749419045,
      1820089047835521781,
      7022391110593898004,
      4246024198927755670,
      1029200313658580120,
      6322139100175994995,
      1350917120719504337,
      1972739718215685969,
      3160762244676887040,
      6000385483076406714,
      4618934996453696061,
      2598356242564631515,
      1717559092877209053,
      3773179593111723591,
      3473344716247027025,
      1513963222428078179,
      4261728643331084400,
      5358415981396945587,
      7350523667629741435,
      2781779625008233952,
      7934479840484959107,
      6170583375392228354,
      2959483303679679397,
      8904501768554095387,
      6763557021045942380,
      7522658032236124058,
      1667865263044259728,
      7453876888830274017,
      6743927881899138978,
      1016076253196289344,
      6306945121657707346,
      4419223888371566491,
      3018588963229272942,
      5367807359364849413,
      7504909449573068834,
      5119311581103587194,
      8234163960576847873,
      3901938092194528065,
      3434823826817345762,
      3659967260286902641,
      232711672991524094,
      6913105862940980400,
      8103220703186671436,
      364849511617802972,
      8779353634691891748,
      7928487172894462086,
    ],
    retiredPropertyUids: const [
      4571514581896309093,
      9012675389637349692,
      2787389489162236316,
      5582288762903526921,
      5802970658235038355,
      4225333234815189415,
      70495681631263186,
      8780426312557576853,
      4786867282366356153,
      7316243383545945209,
      5028084089445177644,
      3245686336154357619,
      3185020167107950136,
      6220813943547701936,
      9132171197911683492,
      5749354187865911929,
      7809852995169089461,
      8853853549722207168,
      2192813099515405427,
      5112006702585654509,
      7776313172225693426,
      1441229222081870504,
      4308200459308293837,
      8262964501209679259,
      5645160819938983934,
      8454301578184505478,
      5845332188572659200,
      4154167542116946199,
      6914870118288592463,
      8199938142964960069,
      366981135709571739,
      2614254402727330282,
      3294516532701183476,
      4697324076856665949,
      247407147201977122,
      5992144994352980811,
      7349071252990456793,
      1871351774035531128,
      3103363695161237435,
      6042281343213088407,
      6731623599427032974,
      781156597446378264,
      5072560505179090456,
      5175008844709499926,
      60371396049697212,
      7243732905702602630,
      3459627501965220665,
      550036120709604940,
      7981113096063515319,
      217362334464342126,
      8333316484817208656,
      7495127239343450899,
      183634846774355677,
      4363534967057771860,
      5193406739517828193,
      1476205201716473765,
      8555682003621968733,
      2261602648745707566,
      2386282370506565300,
      3171368235441980242,
      2353491599753164131,
      5561881208210482658,
      1499133965355534660,
      796987764983670930,
      6509464831961256617,
      1146488991893057545,
      3241238923962943807,
      4059979709999265237,
      6656049623270538455,
      1262181144269945968,
      3351273738729630479,
      2759099658773773121,
      1654980080963293071,
      7779613582658975713,
      2574780234799864566,
      1963541012019643301,
      4461040141607289582,
      184985504808725844,
      8607510702142523368,
      2216111355466609473,
      7629408531282557639,
      8891127347693489527,
      7738876077939670759,
      5445048112398156123,
      7737393064543568183,
      3300342561588363137,
      6137099442242564554,
      4767852697022587854,
      8114485211392579328,
      8017450597590514114,
      2947052093394516085,
      3516930144062175821,
      2965292115177395764,
      4389293205838708348,
      2453419180415939452,
      6511174485324938384,
      938559999648702965,
      1806499320748084887,
      1702275124873712239,
      2336659149837101019,
      8223606550278654531,
      9028912719946439185,
      3488430261355414781,
      4388901821337799512,
      3537989567627441894,
      8781669280564592860,
      8511104786297991132,
      3625167360548349754,
      8231749080716661681,
      8462400834893197123,
      6270341960358729345,
      7595674606020451331,
      1707802879894501920,
      3826929692798083915,
      6592960447288262767,
      63694104786823356,
      8639621562713474455,
      2130250758980287211,
      2962668009178612594,
      2498210079646097479,
      4991297768767966949,
      7143640908152047873,
      3827356741102470402,
      1778969515333280025,
      2226266114566841105,
      6551012334679092510,
      2715886861958071800,
      7796176022729994453,
      58176331967295650,
      5386303207626169490,
      7758551437840897822,
      7907689500924481996,
      4595829795726475984,
      9138143246274616078,
      1626588644485965426,
      3706825706279420441,
      2439994079087877127,
      1752574202477338591,
      6438284473988187729,
      4166652952680068710,
      3098325163088633644,
      6964819152150866071,
      6802272770107688740,
      7716993074793475483,
      5386211096908595514,
      6015888228027787577,
      9111642749788424621,
      4773542150269710325,
      1319124283104405517,
      2190489246275303090,
      3880299517976333204,
      5250930916030897411,
      6822965244532199686,
      6347930933720700037,
      4039887852237092903,
      9077841602396107243,
      8666401939609954824,
      871811219580383524,
      5846000189865680545,
      5460920613005986868,
      1006991260494682136,
      2613899788257191874,
      3458777720221041888,
      4477882668342275318,
      7706395627379558771,
      8175465841201734114,
      4579575728033683154,
      816460969719659443,
      5552278107504228681,
      7061925838217780584,
      7010121338210532025,
      8018474176059938555,
      6763043104018637377,
      7441902278780210100,
      9110415396231201644,
      514350159714875465,
      2403090959367418232,
      1043985781055797809,
      4895871855317620216,
      4260085647205818810,
      4577325081069611290,
      5460540042750277038,
      4221644590241422558,
      2999165783023120335,
      6882995162643975507,
      8735716482537425632,
      1829315497452010425,
      1721592483461307899,
      7318545731758137447,
      5860215939733699710,
      5293580310123356050,
      2672778512250074832,
      5808191041348711657,
      1731202058870378356,
      2374718112049072506,
      7813889183794323565,
      7650624286848337073,
      3984244812635555518,
      3871100851727341492,
      960196873331808320,
      7276068551040216322,
      5432098704015563075,
      5166363060883947281,
      1186935264138945171,
      6961236054461497999,
      2706214137289926789,
      1114492804739630953,
      3942686344943129648,
      7425591899345366583,
      4248402975694670923,
      3854582732868722030,
      7221522080580863868,
      2756089789084182845,
      2473155318580653966,
      7598835731314787768,
      5755953477950692226,
      5410516265427835375,
      4275549123435003212,
      8897786083653585024,
      1857606644526468661,
      7282682426015617995,
      1386698667551198447,
      6107693142325258294,
      6700603637645597183,
      407658960219963230,
      2840780802154754684,
      2352365398836243397,
      3575457723238767821,
      1003426545530527611,
      3906821453422973931,
      1733938763837488098,
      4302017410049035813,
      5137524627736555388,
      3882645795475686291,
      654868312001474961,
      5544079310441080868,
      7616514454075354700,
      4613788828039430992,
      385049278866284470,
      4635911668471549984,
      3319649781473508038,
      1299695711105948472,
      5319693119068111591,
      456157895457887656,
      7158146515216348849,
      8709565648807130139,
      4721884993563350603,
      4303980620253946208,
      4740889830326283468,
      1880911990479262161,
      1847511238147973214,
      7609765190709281259,
      8642352248855963905,
      8911689709696300962,
      417756432027490887,
      6137083598811481673,
      299759213101649206,
      3850894118949949854,
      8852625891619226930,
      4756544874771116576,
      5547147193193656501,
      62917340158007039,
      6945214133602351398,
      9006089474797815973,
      6156592006190542040,
      1775863725247085027,
      2323670881050120168,
      5946165596726375784,
      8127868502053862899,
      533725454653402170,
      4568191635579677186,
      6688297153781946083,
      7340923892561418493,
      1364200493208498265,
      2272359749455667198,
      8850524295053366966,
      6111612812728159526,
      1086981575982238680,
      7478600172664405931,
      6895535144400641978,
      2076900059412007802,
      3487442024129258722,
      3493373081674849105,
      3887195629921009395,
      7870171708086200579,
      1738965021731109271,
      689826481336358697,
      6593684524939845525,
      5848253230982366796,
      8779027214997217500,
      4116522873392592270,
      383970817936410066,
      2196349140126039800,
      5485610589414281041,
      3071712952157680482,
      6524181836195605824,
      1916624501527642412,
      3454676677956971337,
      762381275757974501,
      3811650618904273024,
      21673281021407675,
      7519717946928981266,
      1672068548827757820,
      3068857554047595712,
      237462372518437626,
      3816199488573608194,
      8660795984721385473,
      526744307434641225,
      28330475847561906,
      8197684376821239748,
      7454830336296107312,
      1333774542267540458,
      2492093484507867139,
      6524476111938890097,
      8709509329247809120,
      3576658464853159339,
      3780572902339864311,
      897816536769127218,
      4585359668006511003,
      1146712022619194533,
      5085167715326523205,
      3726729057540443142,
      529899933502390551,
      5603512934719503978,
      6744788667198316331,
      3640994757711029895,
      4981427245335328694,
      8013488507922693392,
      1126654011507609691,
      6552555030036266071,
      3105185561798387825,
      7455231367729863336,
      389138612434289633,
      5810733166585121936,
      6636920808202193146,
      774040271593800108,
      7332129168337200126,
      4895198472402477453,
      7466525475084109355,
      8798223597401532691,
      2918395601744600824,
      3750080356731428432,
      1089415781387757327,
      5596199979221564245,
      285090151253660167,
      3490337939086297205,
      3093889695629299011,
      8917970314143235892,
      6961320306805737235,
      8623898075707701964,
      4381672687584025802,
      6330442091823415120,
      8277251003285419574,
      8204653259699940895,
      2572327786688526726,
      1515851961060189572,
      6220449424312557286,
      5947538763440169412,
      8012672636641997804,
      4758155112013563006,
      8343141965130556559,
      199924073377551880,
      415724422376859632,
      926853328440372767,
      4050589444773786291,
      599017760240536787,
      5733489169948412098,
      583500234057038182,
      1332160445934682244,
      8633705337093441590,
      7917750189954432280,
      1065070872636496421,
      410065122460653256,
      8260268851309375973,
      734652381779409202,
      5193668358353334283,
      3044303726126108476,
      3774977608864858763,
      2426252977638068624,
      5642332396408883905,
      2324864873927124778,
      8440351181090636035,
      874667306728025648,
      6413265651879554713,
      6103214580710971771,
      6933429303168622664,
      879066952418999085,
      8497696653102397637,
      1870272335563092544,
      1838959669066166158,
      5378359836820444794,
      3716886677720652730,
      7166087960195259967,
      6210207667290347113,
      1869535379171164639,
      94966693752817611,
      1393153567946015437,
      8165027927544962009,
      2446013003011292527,
      1222744733965882606,
      6942279717239454587,
      83844201855945141,
      5831951442357412754,
      5978757509188072623,
      155781222768843745,
      6762186681200232883,
      6024256658735786338,
      577431091448082263,
      5443735294159820936,
      6711584387159007189,
      894298240972930143,
      9113746899244064075,
      3677068059150383264,
      8887759590984674108,
      726554449899464152,
      6925044054572500254,
      7917006577651258074,
      4868778524042086419,
      8170429303089701335,
      7601107035425001644,
      6877431456593890403,
      4118231892628849417,
      7050389365528096725,
      7275202549776374314,
      2620089041089034142,
      4606638016523488210,
      8254937396097986707,
      2654343802536432512,
      8758688631266122102,
      6085155904373686540,
      7797621716699931481,
      183441421763690082,
      7286181689643136648,
      1705543315103574926,
      1346145803735562928,
      8506459059180469899,
      2067480772621239903,
      7087915255130533210,
      958166703433740497,
      685086925419351099,
      6125179141206515600,
      9186051206396034635,
      3601594445656730550,
      3759096953533756235,
      5515545524625588535,
      615006467282884867,
      111120282687905389,
      6555434415692724415,
      3973283360466261632,
      5353639872014225085,
      6471909263789808845,
      392737620827015816,
      1785401493527718230,
      8383994206437507359,
      8643467876047229240,
      7471000949324995891,
      3965779297155003671,
      2952157414257865044,
      1704864337108962960,
      9035631455590215646,
      7955637476888606176,
      5446310469848464384,
      348118661812931321,
      6231881079392187983,
      8528167630813290827,
      5333379800484990150,
      4644681763293123384,
      8036836080045655675,
      2153653955755104568,
      5869459197991466045,
      6585452851763619150,
      3932284301718573267,
      1097976820009860869,
      4931538739741690127,
      5335514117735234614,
      3239806861657861218,
      1520849437875342897,
      4020175616809507176,
      6724514150182070242,
      2022059599712523913,
      4466502992477655254,
      243915059546524690,
      4821823784495746146,
      4757507405874367725,
      507971230240564621,
      401876955751847876,
      7769394886927565330,
      4949997997999685710,
      4170761855221233643,
      765161522836031565,
      7237821232769866266,
      7544080586671486956,
      1230900935517314501,
      1954208898373803812,
      1455710535486727652,
      5129210987781700244,
      962928414029199760,
      1634332708224861774,
      8440055080719051292,
      145121964944917541,
      4783348338017552505,
      2184381159263286525,
      8798059732237499556,
      2983094449711578081,
      6442477045726647934,
      3028647587179586676,
      3384307036237845728,
      8501261251238367006,
      466545817011455284,
      346451649025355918,
      4128361148954871453,
      8704391777636907830,
      8493224681775178285,
      2947970848215623608,
      7429255767750461815,
      3520460118621143408,
      4497469694894637312,
      4649042099588886218,
      212631612434480726,
      4507688000511027155,
      2126543183327041729,
      3724533638984332696,
      3790076790941295651,
      6623261913810198181,
      2225760413017884411,
      4076860402200846809,
      8219558549345573131,
      8361527460808050463,
      3787341731048301585,
      354623297572096375,
      1643208795427467213,
      9019081244080017961,
      4411772930118607370,
      5571418004989475685,
      6558218193952344616,
      1614147208722289898,
      8322950058807334121,
      4016461913810266,
      6797600239126484070,
      4596114683402755432,
      1375239187280474370,
      4914562609540844907,
      7759121986425012456,
      7737624495293884389,
      3211936336018898453,
      4942352570773224948,
      8813368090354221690,
      8440897734403642957,
      1356279951093069209,
      4084654530434647481,
      2349826448157503480,
      568312720332287895,
      6311244952219607402,
      8603978824542179982,
      6584055789103799758,
      7315994896314649004,
      2959099833575495924,
      5936809921028793556,
      1759656424920174963,
      956017915249248316,
      5105039266737854350,
      5963815598177060007,
      4989667326599655621,
      9143429565943232500,
      6717531088636477097,
      1169268261033501010,
      6189362775695941467,
      3079704130087078844,
      165039696136790664,
      4471258054449441752,
      2042476905053324265,
      7860470549477788433,
      46929850313471143,
      8560199359387335771,
      6727516328351641166,
      1368059143599202627,
      8769178845051209821,
      405382149491985029,
      5797497860566673210,
      8910693955758085228,
      2569820869399202939,
      9161744304868849508,
      6325987871958532469,
      5344738570798764481,
      6865765117169956738,
      3592598603874720466,
      121335058422443190,
      8518726452688740848,
      4924696927409362118,
      6599624585344281712,
      8630296948988341778,
      7916928191135625709,
      8011788109103339261,
      6800647320929343657,
      8846093513376069371,
      7479509842861997929,
      7450783381430755481,
      5372734958219392604,
      9035118803625078793,
      5373907501252306810,
      5786360363895339195,
      5644125962801669252,
      7222405350558394483,
      2676766541762155983,
      5952025104549020794,
      2358971286169186174,
      9142746293825860299,
      8563461063501672165,
      8019546329380681369,
      4069812076922508527,
      6101930889733634515,
      7582017903629952907,
      216630484885597215,
      1369669171338941100,
      7503753356114399128,
      5929876537356185941,
      6715683501323750862,
      5366594070588667291,
      1053721684076266557,
      5141083595884732481,
      2379727068218516447,
      5666284849950308254,
      4833048365391539980,
      7642771199682233958,
      8411046351859328906,
      4737746079117864532,
      5732731162433249355,
      3944902595659478454,
      4040266904706576302,
      7956165397361849634,
      6914368598374200501,
      4864590738329052778,
      8237031960064542823,
      6489513247330592284,
      8109661701401643546,
      3757462053875830899,
      7093956563075081218,
      1148801231168709484,
      7910069460516730617,
      2225362788525840300,
      6924345665655334576,
      5897081866479577261,
      7970260867337827934,
      4314324446364027982,
      4248054560051197897,
      2305192534685806158,
      2700349204513474560,
      8763658274016022652,
      8068656167659838108,
      6884779522507975315,
      6242767381042469068,
      1854358615865225405,
      9215228117610051489,
      1711633827975003718,
      5739659053603420936,
      192336196035456536,
      2547155252841726435,
      125768207399904909,
      1172282317600349390,
      1811944711874767552,
      7297440961477073505,
      3158753177869905963,
      9050373202733100490,
      7041472485886277470,
      4820204794305008584,
      3248257824572771156,
      5703164106507226319,
      7515027484422729121,
      5224808460218053913,
      5024612217160260017,
      3311892543438589410,
      7021836552132801593,
      3045017323815581661,
      7263141940688139375,
      4471862399168463185,
      7933436425535987887,
      87710128746195449,
      3342999634620333726,
      805885037339285796,
      5034610095918101484,
      8780182221235996065,
      1555812919107352405,
      3448993402597129227,
      7708976331696278254,
      6352926218751151810,
      4533018649516535589,
      4437906851156961048,
      8387072666000704233,
      2181763421301516700,
      3855524621351393503,
      857648927575068176,
      1061723285402141069,
      4744640170982954749,
      7360830544462526939,
      3277958548751109751,
      8580094371227971238,
      27216850645992170,
      7384860153552031142,
      8802353260708106832,
      4291621352199771438,
      3308109956026161157,
      4226568977640921722,
      3469427894388954193,
      803324018887663285,
      5200344847025179062,
      1437747077655797683,
      8129542091111719064,
      1222876058252230764,
      5030337648451594760,
      6290207528137658110,
      9216983502430594838,
      1219598712056208725,
      3426970342961321545,
      1238771029141623377,
      6891412356013145516,
      3490773902572545515,
      4364993035826009822,
      1860046215661078879,
      6998883888142043590,
      6791912410410724881,
      4516619852455545165,
      691948162494443586,
      7258679389327030391,
      9167484537158148768,
      4272281541267221895,
      893443913440597660,
      6553077820676477299,
      8406640353850765479,
      2126245768679238798,
      2499747196509912685,
      104862699985238594,
      1844067250999016437,
      8225280187213947800,
      9069119532992770835,
      5340989796937130209,
      6854331521494156310,
      8629978692967133610,
      5198316426224074678,
      2956371681385727036,
      5102527112282341973,
      2381709851203976648,
      4896082285804123239,
      8880853402759105800,
      3135245174397599788,
      7113669646156299661,
      157602965159303330,
      7322069061940101510,
      6751697815115633052,
      2579206823780734990,
      6481763680254612462,
      4769742047522171881,
      1321423711678925555,
      7256315213551816708,
      4488226836276098526,
      4669542506483070506,
      8494140724666543995,
      3851565277474326258,
      9116560992563794098,
      5481414565854586456,
      857839458462004043,
      6747609842808973093,
      4437780097562147369,
      7595887750246343121,
      8819244510746258398,
      4824533780088834452,
      848370809593961924,
      3821974816179651260,
      2016312635866351,
      2941361711761989521,
      1458816575611465294,
      7262945314595903457,
      2996360627972537895,
      6441591505046308832,
      8477282566225556214,
      7856593244397375980,
      657716981543965728,
      6189380119926686608,
      9054127955921849489,
      2091165758724840243,
      6068115046993190273,
      3785608212071454128,
      5783078338974355620,
      3364936538908988325,
      676505543949076275,
      3154983967749249327,
      6541840618431802294,
      1969034762789500988,
      4522335898417548799,
      2998010494758259992,
      9010855217620371798,
      5945055068138616584,
      4951971194727422410,
      6426290806706184002,
      3924117309189076579,
      1205749999891923150,
      7384770744310751609,
      3583891008712410474,
      1749182943390522279,
      7005355334832261306,
      6887609068737253959,
      4483014896354686624,
      8972895872983970245,
      655937465257689913,
      8485515087185353460,
      5828767271005176742,
      3705149187941687303,
      7246824695484483934,
      1610060896007867803,
      1095172392996134010,
      123914923698092819,
      3085559076342000611,
      2141002734438971326,
      4685105011427340762,
      5327806988501901149,
      3129609970738708978,
      2355545438587227071,
      6528817052068690196,
      4437614527907732147,
      1147649774330230445,
      5039577995197542298,
      6327221821291034837,
      4243716590744122843,
      7011921073896560261,
      1981231646891232350,
      7319985779910095578,
      9160426199395607384,
      6638149140708504948,
      8318555607336241808,
      4287408784127880255,
      6520045408520046204,
      4380146692529654019,
      7743860256615551648,
      343661321204694827,
      8504114366239415205,
      7712995690257904487,
      8436996372928115627,
      2393812705762403466,
      7653234275822653542,
      5499034007017722814,
      8932357577763372190,
      5294555965102157559,
      4096897157024550856,
      2957402483507469559,
      9031783597959916397,
      7545954927739517613,
      2076232327802271516,
      121555551716394218,
      2584967818517744427,
      4829805595122646934,
      3296210768640712613,
      4526362072813489951,
      535717655556953717,
      7724733117853221578,
      649650742307607994,
      8647098398446563820,
      6144874800175781154,
      2704597178608504989,
      4099815266895909065,
      1470957963928084273,
      1434412693480516037,
      7758222009248286663,
      4638999487569060395,
      2223007188076306327,
      1154627462714713643,
      5984041652438444758,
      5414049385905417997,
      7508751797924175410,
      9165418046085031702,
      4820093555081038166,
      8107164162817898778,
      3546196403045131699,
      5791527448611292032,
      4393547515753835766,
      7898677908184461106,
      784232346227703718,
      1658283943578306643,
      7376964297716169436,
      6764561760427552920,
      935450916716066986,
      2469799159185930359,
      1315840409130168448,
      8094751542213989927,
      1208314747977066257,
      8730496994498481835,
      4772976244553510119,
      5245308623358241776,
      1239416442767897083,
      5989303124683256899,
      2110300100578155259,
      6973141389290863992,
      8119102138031877922,
      279004212434442007,
      1699741979540613901,
      5798026592483747961,
      2411613726202316503,
      8422150693811093835,
      2234179543251159985,
      7813387852642376368,
      4189631974695977880,
      1523182241112546100,
      3105369277328147043,
      7113046157346752127,
      8337501869095839371,
      9180078812229806103,
      467122426896016399,
      3277316926093165883,
      8327968085617272934,
      3680652738856433522,
      2434271403803209846,
      4803490906414503447,
      6422524626057522065,
      4505182260070708479,
      5182674525930871222,
      781547126148607599,
      1087125819705692488,
      5420216465923225416,
      7710484599391193448,
      8325937315963430896,
      2656255778242691964,
      2607764076760259907,
      699337773489163997,
      2736456826588656488,
      1331853498987593184,
      6622977173519088452,
      8028715716021384377,
      691685274104217721,
      2260247144675659915,
      897039495760704414,
      2216097799806999115,
      9221042821488845342,
      315009878298433253,
      5418428333891561111,
      2506393198030876135,
      4790055648248952366,
      9174406899329301968,
      3317020827092375521,
      8186080040996735604,
      6574614001444776393,
      3642860487240475714,
      997508720702506543,
      6725519940533468915,
      9030321199634752258,
      5949634919109723843,
      6348971279628335101,
      532907921456321710,
      600015437395059062,
      3998500924869837587,
      5514577044491350067,
      6996339071241702472,
      3380079701539960118,
      6722901022131498791,
      1298339486478515947,
      3764561845152595913,
      8712580097716192252,
      1851204840632278146,
      4159479912304345619,
      6576116430467016187,
      2358608373561178797,
      63330217984293212,
      2150449880498590819,
      8578434348316736073,
      5305301035640119441,
      3735894531262358648,
      8844543443220431415,
      7828206624396025730,
      388427572754960192,
      8509822602079129654,
      900428955338079233,
      7460275576518140614,
      5550440959104114309,
      3979133886519278983,
      3732620414564988271,
      3417948198561129231,
      2286318937914517933,
      1132950312447901660,
      2941505544993383584,
      980463712158827183,
      408619595112732271,
      2931888405594457161,
      9119735557732764318,
      4458420529255133399,
      6474653223546546454,
      5502407750425047690,
      7356296336054704688,
      3866219843491050231,
      5414446496823010202,
      839321155476894610,
      7052181836429176411,
      2278477565817020928,
      3304463078661001468,
      4932930038568226853,
      776984790865449733,
      7978895816479994295,
      6798986851031619384,
      1715606599924794592,
      659890475107182345,
      2332845780142049615,
      8294210761467365481,
      913681311109926811,
      8404767873580309666,
      2078588005697480648,
      8260049791391103108,
      4393201844417280688,
      3257322848570735071,
      674028408566355178,
      2248020152554273114,
      1524251030873671087,
      5066674836771609631,
      7217822581719036264,
      7668850277661666246,
      8304177521503812735,
      2073651024795566317,
      6500915134928785922,
      4189080115909614284,
      1830235621118008064,
      599957186420153628,
      5482576491267783318,
      671674903902950860,
      1425518440913360928,
      7500265002797841952,
      6261714839391273864,
      7446788341079693806,
      4177655584017339643,
      7945283791847296791,
      6097605718919354869,
      1539695544813277717,
      5095178451048414161,
      6647901703791020775,
      6530243409349334514,
      1286828935278846323,
      1291924975961255938,
      1160591116560255296,
      2227631044133191424,
      4671945643365522346,
      5578197522401586615,
      4365972484430292742,
      3955194847953197831,
      8688576775098545687,
      796469238786964586,
      5029787317057507901,
      5995183253922641141,
      1007084603393003838,
      6350145437749314939,
      2658244346413638557,
      3690473617446489201,
      3680024767136358436,
      7681215508596648790,
      1407622359041849863,
      5447519496633086172,
      4942586977040563809,
      5735559718995911734,
      2435867471112577417,
      2908800219595468318,
      2271853746252238702,
      8347687324453044233,
      5685415725492173848,
      8480907298074185971,
      6231376800010497770,
      2892826110960291396,
      8508599102490775163,
      61128573406509726,
      4489122855650882112,
      5986188288704042534,
      795133234717408265,
      5850789950862246603,
      9060285408837612141,
      7919295687398404168,
      1051519255674886365,
      1050172321638988535,
      2961678294753215852,
      7082658017290492012,
      6101180973717196030,
      1541681219238101443,
      2950230328770864908,
      2961934202371402423,
      3045451325295930619,
      6620045608911666749,
      5409703996330040359,
      3469858396294793000,
      6626703495169109669,
      603495079700739143,
      579644696048717751,
      405812865481877814,
      160420760745922657,
      7054172026620820285,
      4860085631807782532,
      116563413359818345,
      4750170861584878099,
      3042271293241735371,
      5020286164137965177,
      2752673489374879930,
      8634387197810942740,
      7298446223640518903,
      5500368553441975631,
      7383962028754149906,
      771163514906437121,
      3123937605731591090,
      6373609465909037274,
      2486964964767374598,
      5983870526572490659,
      4133411549106818262,
      1406509192111863541,
      5084343277012170893,
      5629444766819325954,
      6609824836742193438,
      4360500049011549687,
      5343436075975827407,
      2503539686686964442,
      5248941866354329945,
      347765953637307268,
      1278526474962804470,
      6171394319365152687,
      6529650542689973759,
      4645691320437922429,
      6945295845980459611,
      7448748599195206474,
      808739811709587299,
      8404597073622640770,
      3181782841153017817,
      6717037089502820074,
      6379810764941803902,
      6204042749600643331,
      7497660375175755835,
      8777952067107109038,
      6127534111526866299,
      4261811227071762480,
      764631225207192863,
      1783256050457773712,
      5677849140130617365,
      1131860455639541468,
      4095850669608109630,
      8031952093588313170,
      676528215937724766,
      214921700824814402,
      827564883282615785,
      3454924991546638757,
      3028635751233578932,
      3465053635078347697,
      3667876729435314383,
      1677965851258621676,
      3114199424319838871,
      4362786725283255200,
      2422597866887219792,
      1412687317163949080,
      2467805313163105317,
      3073993014436257605,
      854700053189572038,
      2363560722387876512,
      5967822254083472226,
      2039393794977214207,
      566483087248939528,
      6974889619484825483,
      5537631789322966178,
      7188464062254193049,
      2559547341204282673,
      9040158874194974748,
      9019412668531757698,
      6475761909582000808,
      5572048271881441373,
      5511495406178880615,
      9217936131514788434,
      7239239402778083521,
      353301255355169613,
      4477932268655802819,
      2225397009577403246,
      4548246916444541074,
      2385883955322679249,
      3090760589735100374,
      5471675795789674993,
      6399945518142159879,
      6892230475408733070,
      8987669992456763582,
      3671409481076975416,
      7277064824944502676,
      3409590754737672882,
      33653649623554694,
      3012875098983679988,
      6210267160525700333,
      6490449051810592880,
      1844540321434042721,
      1116868009519858110,
      7145785692812365347,
      6426979903415275936,
      5304840215718669847,
      930702337765908066,
      3249180970843844724,
      5939952877332073131,
      6615670504763465327,
      5505999570020196060,
      7808515912315964908,
      6385884491621787736,
      6646127183511609703,
      5669366277074792385,
      8719331970372122523,
      6609138891143844494,
      1199435400941491329,
      3351307788202173069,
      8916189686602231568,
      4918000052157257750,
      7570045920315795165,
      2865097614949099949,
      7453689573972715292,
      4264444617510841649,
      6096629147524730102,
      69060748294799989,
      7465517773333333511,
      5500736258949246314,
      6767614977990431769,
      7996792349283498978,
      6433791864884298170,
      4136483756717409146,
      2164676386135287123,
      5058826934659307542,
      922636064106859703,
      7572721610123351390,
      2637750335325664693,
      7958424155978899622,
      7964132708148083359,
      1327046312425850468,
      7819223136199652468,
      7003078532108225171,
      291283022605535953,
      3187525837633356101,
      6437843792822787856,
      6984280727999397052,
      6633195377779811817,
      2647502863991788336,
      121238781791379416,
      6610469785912025596,
      8310238937230236637,
      5955018014394859368,
      3501387744063493209,
      7857324259705066579,
      1775501655517610892,
      2332346563561454154,
      4889209185146117074,
      6311775188797792315,
      4049119535376792134,
      4746861148490803772,
      975126283468417298,
      5927351903989971021,
      449858287496527588,
      4526329998467089516,
      4504525869879515480,
      3368121332442483559,
      780128347157591151,
      3066160420956401062,
      4626954562962962501,
      7825775391767344621,
      5659946655219816354,
      7424705730145047080,
      1641003102963677074,
      2720805418096691618,
      2379301168132512653,
      1224235949635762294,
      7668004313545344257,
      8691033569826149850,
      8782356774186497334,
      7730146369976853682,
      9018942710409103753,
      6658703739514328914,
      7788226417272642975,
      4259350105036108184,
      6485457458884873111,
      5378549848617449934,
      3788749569259292501,
      8939162793146676111,
      7348197590501686062,
      6738022696061342144,
      5068892956865257378,
      2279938983601016027,
      4358096290984837159,
      8110448020967469209,
      4008553022354707057,
      2536984661578248751,
      6074992400295464543,
      9191428777107632967,
      7079064477384654864,
      4633889317778404485,
      5645773458093853136,
      8022668358148881157,
      2095192585104596771,
      8839513988422071517,
      9187664308980340043,
      5883845631798758627,
      8572658296558095407,
      1326628020852087219,
      2467235664948848519,
      8154079690894800247,
      3848876128559095310,
      7561356542498450733,
      152590022587883917,
      6574101936314059804,
      7079657727988338679,
      8662453697410245576,
      1912525487158718648,
      33099428477665334,
      3009147072543578826,
      1826746037710273351,
      1233493806312240821,
      3348989296605375082,
      5412763469585318442,
      7295179061420310907,
      311270780583790830,
      8492479323091973923,
      4934987757681042861,
      3731495080046081104,
      9026509082665830662,
      3349825060591645221,
      4854644416781105503,
      638979367634375079,
      5067294354202183418,
      9198735326535719436,
      6211457273233741153,
      3802167763928456323,
      5150994769125816334,
      7031110346949793992,
      7824349001850523964,
      2689505245967902164,
      6398668140977106466,
      778575094667610809,
      5950902232311068201,
      3811156027918364962,
      2908950627392997414,
      8748061178414688964,
      738351442278031218,
      6974499152815004450,
      451806744761981933,
      5426299497158418365,
      932983854342525086,
      7423551853373717022,
      3164943713172169373,
      6075581136324837406,
      6189288197373518482,
      4981435478228711594,
      5215126323897572864,
      1866175758220225505,
      4388312497405039609,
      1095441285760283199,
      584712584901450330,
      7833304095111876641,
      7188073433374050070,
      1155740095432369017,
      7249545213637370,
      986378166225442769,
      1751919684480034579,
      5322903061342594160,
      4596459667504622263,
      5208876298580439812,
      8293733288807494968,
      163763302280343652,
      1893889875238702330,
      2365839478625945849,
      1425309010582034923,
      8108408462312053297,
      478774725494451858,
      3380262515423523888,
      5693954994210992507,
      1327608424307614384,
      4711256467664088470,
      3526603209366488720,
      4089897983469421077,
      5338868931638477904,
      604841104856126952,
      2390216882576874457,
      8234886844044691701,
      2476968055083199752,
      6773056758826051671,
      2338043116460605330,
      6730712345070477673,
      4155582219747136586,
      547382220597742455,
      2201104147764644789,
      5366559678723656707,
      5376868444084939708,
      3954290539042590923,
      4712623045266952554,
      7036873032114282966,
      3002001827659048235,
      3795458627275918977,
      7350546743276488891,
      7247171624673852819,
      6211947518334153341,
      5232279064685104609,
      211304237776490301,
      3598711315171073162,
      8432973190451117489,
      7823215704673059747,
      6747079082372129575,
      2183501642191968131,
      1691741911876937862,
      2534669057576964157,
      5012758177019052123,
      1450670175264146493,
      1249397547909198811,
      7545052303910657596,
      5118111179055551646,
      3299673949496945663,
      6423093411819829391,
      4622076489961410881,
      5341738249281000024,
      5623997542252033060,
      6431412460959773638,
      2482324509972558180,
      8325929386098008370,
      4535476682417126384,
      1322189418658042703,
      1127919451910574720,
      8456616150468697056,
      7988173323565188101,
      5264191065476770680,
      7246147279400242350,
      6346837453210536154,
      4282292059823000793,
      1666607420822825244,
      4927728486654135559,
      6339515452438042918,
      495564434481688030,
      1265419011392417041,
      2849847042821553899,
      4331044316251149638,
      9019066628547136614,
      6359670985085789883,
      3558472813020264767,
      1503467017671394452,
      6790699429220873724,
      1685089188490246722,
      2291725977143043930,
      8134816148160327963,
      9163128084996451273,
      3261580580668108255,
      19247117822996987,
      7434986699485606960,
      2824575472704796170,
      1651488611881217620,
      7671522079375116653,
      4242578798807471676,
      8451744757046611585,
      4933817271453180191,
      3845703477369766536,
      235270056758366505,
      7341321676325642847,
      2109877747225761299,
      2330698055945671552,
      6501692209932025483,
      5397405750545916430,
      867138140292531504,
      1803654507991951106,
      8183612546891447738,
      6452112185300473610,
      5732437829811678998,
      8390178460504943649,
      6060313597064280993,
      7154417192789518250,
      3311337129172498340,
      3336594471486552547,
      8102535011156527103,
      1832710285073498227,
      7182461429232642843,
      295917904133501746,
      8802028317329669340,
      3975917510667087612,
      5876277117633443761,
      333712423663774268,
      5601146815433839117,
      4981608220200895927,
      974106658757861139,
      5525965033629634016,
      7045410180101400949,
      3554214447821081212,
      2049312443224435730,
      5157466302684123525,
      8480157096735104830,
      5770156075853004125,
      5537262810838415939,
      8947176003722391826,
      5753396651080782256,
      8028793777238773450,
      7053385749806702187,
      854176728009729195,
      1910198480463151307,
      4614038111608609248,
      711429141909320888,
      1551317809675357767,
      1546475473885803679,
      934132152949136950,
      535975407985514687,
      7296184335064906282,
      395716590250134667,
      526057901202059503,
      7223420379121054215,
      5110068480274849863,
      4671853353805411694,
      8186216044313964761,
      372917618504593513,
      5092089042422151685,
      8155345256575911220,
      2405160679092826009,
      8376024936246982635,
      8477891148149663479,
      6637309451216554436,
      5658244585408588397,
      5576372855296205380,
      4810738283619561240,
      8028199434604584495,
      2618981837250310105,
      6716069435974410294,
      6487965652245887012,
      7480611943758383138,
      6708477089405322824,
      465152581569371653,
      9119105206688676540,
      1317618647675770385,
      3172647967058498198,
      6239220384812216407,
      3122244325357774302,
      3645577757337195854,
      1356010884493755581,
      184019446913567099,
      590487849680661353,
      3748273723948925999,
      4774566790449194218,
      3433276514111988505,
      6327848003178978136,
      9076977497080280359,
      3075239090489850053,
      7303382222486061596,
      5044756718740156974,
      3519441252819684602,
      1104564024645282985,
      5947770649235504751,
      2375651897378596269,
      2293075850993814230,
      8432843318493353762,
      872944419185956479,
      3460354002823872209,
      7343979734220825562,
      7187930201105711391,
      3674296587068155606,
      4697571659997199173,
      3949807831012459209,
      4977731554112049766,
      3607925309890193416,
      8136711545383744928,
      1283203612552275204,
      6366653200051051520,
      5620799755606536945,
      3177240252246252316,
      6872905032823068943,
      4238508961527770780,
      194233637208605853,
      7128461357059752627,
      7144887483640991488,
      6952179903625964455,
      2154049607826000733,
      6535114918211333838,
      3803454458046274833,
      1517246811523537971,
      5100293350446084856,
      565174661027711288,
      4544203855927058643,
      6145798189153836589,
      6059461561578261675,
      4123106068003476154,
      4365548901161131863,
      2184861495708895307,
      3769374162087749855,
      7457578700450238479,
      2880166525851727643,
      8661390899998109576,
      3202350148546961180,
      5948821518264036592,
      8068954929233556652,
      2677666653865743613,
      1434514046970990302,
      7613964696588116928,
      8352253273160378615,
      1731215146783544975,
      2520671466629161328,
      3984884542803559064,
      4688912394189016164,
      3492102988423620529,
      4443803318961287288,
      1128193838856053274,
      7250330652035411089,
      7813919492008257995,
      8910017408110274783,
      2825746220436434243,
      7972977186052499191,
      735800593019088073,
      2849228317466390109,
      5727494468395045304,
      1803093185213155133,
      6939436391690835018,
      1345535630385200990,
      7040776398081516772,
      8988272050035512597,
      897864935030709360,
      5297972253039606923,
      8779068507917807217,
      3801531899094022326,
      982538331805262860,
      2158402890843525171,
      1036164347642502796,
      8927405120705980710,
      1982085228292044401,
      2779693150329390003,
      5653681499272232440,
      6455681382057877913,
      6828906757413043846,
      8009245628093980261,
      1159724629439755496,
      5944464771748585772,
      8691335115028553531,
      1768179521302906873,
      991456392652980276,
      7986843213930597627,
      5660625270815074617,
      2093963197940955838,
      3633609776050285936,
      237281623257258306,
      1076574744092832508,
      6883470513604029566,
      5614365068636171086,
      3853736064064337601,
      3139402668100709144,
      1046165989922848715,
      6429345098452015210,
      2426420972385577498,
      8172431154334826564,
      9167048157853542098,
      7375300325859061471,
      814129532185599163,
      5187606554120565082,
      1670600822404453621,
      3255868170982225089,
      4886043098926028458,
      7081536161458640310,
      4247526333231885130,
      7018793741691512906,
      4015985596760476446,
      2296864717377176312,
      6356810319396447287,
      72155046515132492,
      3064709804292364762,
      8387816830503241963,
      1088078202564813606,
      4376303592105720455,
      2858966432174500719,
      8005268993734529514,
      4077176949960919002,
      6204745619106030813,
      5930256526649106787,
      7021361899393913455,
      5118528515227554786,
      3461780508184788126,
      7974229315318197317,
      3180696438601870032,
      9015340676058311739,
      6306717981071116056,
      446232575260805431,
      4438271325842453656,
      1310593633677348401,
      2996456800890932752,
      5175101499981069955,
      8031185498377166855,
      5895623275264160080,
      6295696502149535598,
      8487562200589627642,
      1217329538770936587,
      8756509501489928176,
      7241656727450674250,
      4133914349641575896,
      2352325955711810872,
      6684045031625944689,
      5222882280089910955,
      8006506443587686202,
      5600719816003226097,
      1986371034949945295,
      752837161619216447,
      3653404297057325827,
      8938676396557937328,
      2474860201148110032,
      2264290519213811251,
      3444372179265835189,
      5734206916968423211,
      3374281333248795502,
      1039366159356378562,
      797411528771663840,
      4445290603174629183,
      5633099035845735071,
      3619805598734596766,
      4777114874330336288,
      9174533015987821798,
      1832870205797713422,
      888955670256392820,
      6929933514996357149,
      672797035754087937,
      8399277105932367789,
      1116548704323531625,
      8419199116237200658,
      3789501429499038587,
      4406937770761940598,
      3401859501756205848,
      6143687261735680004,
      6358418438602160892,
      1163469460819583803,
      9138722629566449928,
      2208578949660591667,
      2599666269871923606,
      5643578557294993035,
      597545327243936239,
      5171833878388512567,
      6170116967939243138,
      3883409479146436875,
      5894255571980266412,
      3401592089701532266,
      3403745535516627447,
      8960663416913696030,
      5233697789275539905,
      8655265257469488999,
      1208006665803095113,
      6851137173278808282,
      7649894682960750981,
      7422167880103973271,
      1453486667469058097,
      6371804464950138785,
      8816449810483458854,
      1011480970987786404,
      1000844774564436091,
      7115203435867090551,
      2112863125738820322,
      777260451425449182,
      7452712237577125868,
      3255993734122693257,
      8556727674371364518,
      2390720424392122779,
      1489708287169249304,
    ],
    retiredRelationUids: const [
      664341722264876839,
      1208777791407975785,
      4749851436412159602,
      7007434781315415546,
      7390123639768844278,
      6398337879492719130,
      508477488652362803,
      574597448605969848,
      5974691859140362285,
      5646652650480414802,
      6867722934131570584,
      5055423840827696685,
      3834433953639627918,
      6520258385689890667,
      8706940684453573868,
      1872589566505970140,
      5003411429224091484,
      1795094779608140476,
      2049200851676112799,
      357198396321568682,
      2716913788946093655,
      8744183736287898689,
      5583148433155168997,
      6869981897695222715,
      5680983791198051294,
      3426036575550196775,
      3951063909837693900,
      2882436577201590268,
      8545582894676973888,
      3206877880281481771,
      4333136761447052094,
      2788127923511498236,
      8345586569445175794,
      2187102895006463762,
      717670091892115490,
      4930331415287371803,
      6321749084087509287,
      8690567191340484954,
      858342591852553939,
      2950072140216404415,
      2542196981891243717,
      1262193818099200370,
      3009971534283981589,
      5558578797128763121,
      6931203002517032865,
      7306683157811934354,
      4642800357320109663,
      2059751524722408862,
      2628587442974380263,
      220456632687831166,
      3278648181150192301,
      6323192788625642317,
      7332293607354534008,
      2009011757868372056,
      4827982743515954624,
      5799228686866759242,
      64340828861867289,
      3110339760395090765,
      2811771764186220690,
      675385652509447243,
      3400298016934899091,
      4678314730690565349,
      6766319031887942829,
      5928855441677803985,
      5559002778099016386,
      2904762101227813757,
      469612067783321021,
      7489189038320560187,
      6383173267362160444,
      8569124907321463327,
      5080013087990414625,
      9132495083741132164,
      7434131378211083827,
      60959309287572688,
      274782457561252440,
      4820229032584913654,
      4091903128373956114,
      2423608418979765275,
      1166202928932825816,
      1436382528833302849,
      8733085353928966969,
      2753498002405422290,
      837793056515884836,
      8108335506932428166,
      1306628890170100017,
      3432843533239037304,
      3231748963724116011,
      4484779633717426422,
      5613373011316929922,
      2523410873448384445,
      995902229480396733,
      5951084516328216893,
      2654654116780900313,
      2586815613780473811,
      4642693618208735096,
      4636957700033622014,
      6179699788902382035,
      9194940441005332756,
      6618786012570033814,
      2728419091392755814,
      5562615277690061628,
      73113097169726341,
      128802774239145219,
      2036028419532660843,
      6069309119980298356,
      2923161647181320613,
      4587562152338172004,
      4584950257132182876,
      4966410692983875282,
      869227869614148447,
      1525473605590810902,
      8491385853848570009,
      5359901835573883760,
      9013951039821050169,
      2350178251897540322,
      8261048195357391124,
      5146835041742042259,
      8781882166313405033,
      4419972912776187588,
      5482865427064298973,
      3812555143242927376,
      3586939151014739215,
      8529853726863248919,
      2163569260865059350,
      4824500803393916210,
      3749425207356310496,
      7028236093355285550,
      3205777291363410189,
      1701840002541443443,
      3970085960295613912,
      207377963574787260,
      4935495486516334089,
      8488543125683273792,
      8053468387248976933,
      7598745595327921074,
      595430631991045408,
      2399573685816833976,
      7949627861983612020,
      1349632983341762367,
      5715449420308833599,
      5401312386974171316,
      7287952488645156059,
      1415912797822897944,
      5132797806625837889,
      5412525492596665544,
      8674714466701167989,
      5353467852994538478,
      3306339887660630883,
      6908183771373722260,
      1438224529311191951,
      1466460584370716459,
      5894740426248986198,
      7669467627092299448,
      4760859099781839147,
      5101211474219581672,
      2899476050782560140,
      2647697767423041451,
      6104126314810695486,
      2211800525227696585,
      2436360249882687975,
      6462571282192131375,
      7403070240535305955,
      4509872830792471288,
      5166136564865452036,
      6732628629397915420,
      560441184594775103,
      5912159604179918186,
      7240562855284981682,
      5461774281681110900,
      6220899740664381751,
      4036323510398491643,
      2976660710108057373,
      1567052889064634964,
      5069241865192143497,
      574929855454642633,
      8508759498698549779,
      1515434063981629724,
      6527822034978691986,
      1939894955235821844,
      67389734431247171,
      5520150980325894389,
      4882420917644550937,
      3957374400403255219,
      6643748125969357429,
      7136934368252636682,
      3483688871954415996,
      8778540111986605149,
      6229605093593782948,
      637803125266672461,
      3742300140286908576,
      1494658417574784273,
      4126146197208535638,
      940049295157157019,
      5462946092288311836,
      4169940443667487331,
      5193921412356414405,
      7678419167865601340,
      3132546990974296661,
      4417203989326778096,
      6673449464493636559,
      5836712363982117126,
      8637535095105456224,
      5554394328741129264,
      5018330253644262226,
      499832418820523252,
      7643056144650740976,
      2263324717156413231,
      7189830382515021131,
      4261408820200261009,
      6555733192345400654,
      7979998910483777399,
      179443997717177386,
      8457503429914990783,
      5861186202999755679,
      3449641606125866280,
      2924593903198566153,
      2530561247042587050,
      2212413515398417918,
      1412415746151579564,
      8787580966888909325,
      9085853054524780106,
      6093163051026617071,
      89122758149347576,
      5799710598970770567,
      6136152072833343592,
      7093882917763006935,
      4148031666358985220,
      1532323135151757563,
      2051419565311674545,
      3933732605717958299,
      8628683576992452261,
      3358005966938088916,
      133903925850128065,
      5308110913258887236,
      5533916902474173998,
      4503369874724016914,
      6060130102072123436,
      4582282807632561195,
      2409815429211462817,
      6189650404610486041,
      4121452761854800103,
      6401997724837489297,
      7388168207900730270,
      1837817903182807495,
      675577679156600032,
      2284839526715629363,
      3016666001740361878,
      5933009756241835660,
      1649398718959520272,
      7189487550970991144,
      6362427683391629210,
      7502205532272462491,
      3189860026295828096,
      4522471385739649022,
      6260494139301730313,
      2005687613044620499,
      4417553895162862347,
      6608509678274237335,
      1950714287421661015,
      7723785437881371,
      8626638325216255342,
      1042439644901898764,
      1105509012454192970,
      8378582597241815562,
      4648188622228361279,
      174192831438800123,
      2180913023829307484,
      3490274741843904679,
      4328072276247021388,
      7175900907090725385,
      6771666441640273956,
      4965251476882250911,
      6509169658712149664,
      8072526806826207794,
      8778449786027136731,
      1608595943346774557,
      9028685562623317503,
      7899839674042414721,
      3710501040952086719,
      5689445640566772154,
      862444565670697733,
      8519562681929529215,
      8595761629588227395,
      5414614428378945475,
      3026976015518171923,
      745460752272439634,
      5730666398629602121,
      7679551047977488216,
      1405237563168249928,
      8286156793508449375,
      4045380913211346901,
      6694102233930947389,
      5843383229706297287,
      8590001904610478114,
      5422244232923873318,
      2420898300906879898,
      268133323382667868,
      6053934451283181204,
      2117497849929549140,
      2140385331738854231,
      5348370449824554011,
      8920114220373931307,
      7328218414461774242,
      1830482024515816520,
      923033044417813430,
      6077325173621974094,
      727738741837223527,
      716306352086630821,
      4323932059458606304,
      863353271823737462,
      3784234075583914537,
      4396465703004813722,
      1745363215750063574,
      6502640769218754384,
      1303604927801383616,
      3358390793136491928,
      6074283141191645629,
      2965715727847080318,
      5302187057552118872,
      7745245546504139908,
      5053045692944298344,
      1531151106843639507,
      3577892587483363639,
      6018149445574320274,
      3014711455497717205,
      7202792609445379812,
      8359115746544556563,
      8613809249814661670,
      3820230459300938008,
      204014836687392379,
      275666557459269578,
      3177581963526040896,
      7235808979199320808,
      8225084778800389923,
      1096883779707572086,
      7440542519569993314,
      6212831703940412382,
      3389695417070164458,
      146933202785298357,
      1521857032717169328,
      8433940390251951177,
      7287960989669676627,
      6790428199813770033,
      3476723758938805168,
      1862731116320717109,
      622400438047650591,
      8764036575457075772,
      5483481238571596102,
      8047594604467500603,
      2725630178472753161,
      1111391274475710954,
      6135200881112859807,
      4017091504789551648,
      6999201862275552635,
      6967348019009311614,
      6217057220979577418,
      6566091828474137023,
      9204367311593540507,
      5283787651234513758,
      5968137908425674795,
      9015904545925957233,
      4840331990526568703,
      6973117339786387726,
      7605407562761718227,
      4784410963874442681,
      9096062066673156748,
      2133491487575035147,
      2606094158837623659,
      217583087026305811,
      2447557548656007787,
      5766577395054932716,
      6128859290188396729,
      5042233288834121653,
      8105422031899741904,
      7955037003738592433,
      1954211714247141696,
      3041330128926313502,
      9063967755782399774,
      8665345614136054929,
      5556152818072852782,
      7864106168852041296,
      1932083137862016757,
      2069479518687473711,
      4289263746877541292,
      6291851347331583687,
      819269624184770484,
      1440904316368855661,
      5034284123045676471,
      878637536362296230,
      2832766733366059317,
      3345485813812351980,
      4278681014224804048,
      6561479145663177761,
      4776757449280523954,
      737073209870543468,
      5711447490465085071,
    ],
    modelVersion: 5,
    modelVersionParserMinimum: 5,
    version: 1,
  );

  final bindings = <Type, obx_int.EntityDefinition>{
    Duty: obx_int.EntityDefinition<Duty>(
      model: _entities[0],
      toOneRelations: (Duty object) => [],
      toManyRelations: (Duty object) => {},
      getId: (Duty object) => object.id,
      setId: (Duty object, int id) {
        object.id = id;
      },
      objectToFB: (Duty object, fb.Builder fbb) {
        fbb.startTable(4);
        fbb.addInt64(0, object.id);
        fbb.addInt64(1, object.shift);
        fbb.addInt64(2, object.day);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object =
            Duty()
              ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
              ..shift = const fb.Int64Reader().vTableGet(
                buffer,
                rootOffset,
                6,
                0,
              )
              ..day = const fb.Int64Reader().vTableGet(
                buffer,
                rootOffset,
                8,
                0,
              );

        return object;
      },
    ),
    Patient: obx_int.EntityDefinition<Patient>(
      model: _entities[1],
      toOneRelations:
          (Patient object) => [
            object.patientType,
            object.address,
            object.contact,
          ],
      toManyRelations:
          (Patient object) => {
            obx_int.RelInfo<Patient>.toMany(398, object.id): object.pictures,
            obx_int.RelInfo<Patient>.toMany(399, object.id):
                object.investigations,
            obx_int.RelInfo<Patient>.toMany(401, object.id): object.images,
            obx_int.RelInfo<Lesion>.toOneBacklink(
                  3,
                  object.id,
                  (Lesion srcObject) => srcObject.patient,
                ):
                object.lesions,
          },
      getId: (Patient object) => object.id,
      setId: (Patient object, int id) {
        object.id = id;
      },
      objectToFB: (Patient object, fb.Builder fbb) {
        final nameOffset = fbb.writeString(object.name);
        final complaintsOffset = fbb.writeString(object.complaints);
        final managementOffset = fbb.writeString(object.management);
        final diagnosisOffset = fbb.writeString(object.diagnosis);
        final examinationOffset = fbb.writeString(object.examination);
        final otherOffset = fbb.writeString(object.other);
        final createdAtOffset = fbb.writeString(object.createdAt);
        final passwordOffset = fbb.writeString(object.password);
        final emailOffset = fbb.writeString(object.email);
        fbb.startTable(1736);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, nameOffset);
        fbb.addOffset(4, complaintsOffset);
        fbb.addOffset(6, managementOffset);
        fbb.addOffset(7, diagnosisOffset);
        fbb.addBool(10, object.editing);
        fbb.addBool(12, object.gender);
        fbb.addFloat64(1723, object.age);
        fbb.addInt64(1724, object.timeOfPresentation.millisecondsSinceEpoch);
        fbb.addInt64(1725, object.patientType.targetId);
        fbb.addOffset(1726, examinationOffset);
        fbb.addOffset(1727, otherOffset);
        fbb.addBool(1728, object.attended);
        fbb.addOffset(1729, createdAtOffset);
        fbb.addInt64(1730, object.dateOfBirth?.millisecondsSinceEpoch);
        fbb.addOffset(1731, passwordOffset);
        fbb.addOffset(1732, emailOffset);
        fbb.addInt64(1733, object.address.targetId);
        fbb.addInt64(1734, object.contact.targetId);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final dateOfBirthValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          3464,
        );
        final object =
            Patient()
              ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
              ..name = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '')
              ..complaints = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 12, '')
              ..management = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 16, '')
              ..diagnosis = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 18, '')
              ..editing = const fb.BoolReader().vTableGet(
                buffer,
                rootOffset,
                24,
                false,
              )
              ..gender = const fb.BoolReader().vTableGet(
                buffer,
                rootOffset,
                28,
                false,
              )
              ..age = const fb.Float64Reader().vTableGet(
                buffer,
                rootOffset,
                3450,
                0,
              )
              ..timeOfPresentation = DateTime.fromMillisecondsSinceEpoch(
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 3452, 0),
              )
              ..examination = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 3456, '')
              ..other = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 3458, '')
              ..attended = const fb.BoolReader().vTableGet(
                buffer,
                rootOffset,
                3460,
                false,
              )
              ..createdAt = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 3462, '')
              ..dateOfBirth =
                  dateOfBirthValue == null
                      ? null
                      : DateTime.fromMillisecondsSinceEpoch(dateOfBirthValue)
              ..password = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 3466, '')
              ..email = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 3468, '');
        object.patientType.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          3454,
          0,
        );
        object.patientType.attach(store);
        object.address.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          3470,
          0,
        );
        object.address.attach(store);
        object.contact.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          3472,
          0,
        );
        object.contact.attach(store);
        obx_int.InternalToManyAccess.setRelInfo<Patient>(
          object.pictures,
          store,
          obx_int.RelInfo<Patient>.toMany(398, object.id),
        );
        obx_int.InternalToManyAccess.setRelInfo<Patient>(
          object.investigations,
          store,
          obx_int.RelInfo<Patient>.toMany(399, object.id),
        );
        obx_int.InternalToManyAccess.setRelInfo<Patient>(
          object.images,
          store,
          obx_int.RelInfo<Patient>.toMany(401, object.id),
        );
        obx_int.InternalToManyAccess.setRelInfo<Patient>(
          object.lesions,
          store,
          obx_int.RelInfo<Lesion>.toOneBacklink(
            3,
            object.id,
            (Lesion srcObject) => srcObject.patient,
          ),
        );
        return object;
      },
    ),
    PatientType: obx_int.EntityDefinition<PatientType>(
      model: _entities[2],
      toOneRelations: (PatientType object) => [],
      toManyRelations: (PatientType object) => {},
      getId: (PatientType object) => object.id,
      setId: (PatientType object, int id) {
        object.id = id;
      },
      objectToFB: (PatientType object, fb.Builder fbb) {
        final typeOffset = fbb.writeString(object.type);
        fbb.startTable(3);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, typeOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object =
            PatientType()
              ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
              ..type = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '');

        return object;
      },
    ),
    Picture: obx_int.EntityDefinition<Picture>(
      model: _entities[3],
      toOneRelations: (Picture object) => [],
      toManyRelations: (Picture object) => {},
      getId: (Picture object) => object.id,
      setId: (Picture object, int id) {
        object.id = id;
      },
      objectToFB: (Picture object, fb.Builder fbb) {
        final pathOffset = fbb.writeString(object.path);
        fbb.startTable(3);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, pathOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object =
            Picture()
              ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
              ..path = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '');

        return object;
      },
    ),
    Investigation: obx_int.EntityDefinition<Investigation>(
      model: _entities[4],
      toOneRelations: (Investigation object) => [],
      toManyRelations: (Investigation object) => {},
      getId: (Investigation object) => object.id,
      setId: (Investigation object, int id) {
        object.id = id;
      },
      objectToFB: (Investigation object, fb.Builder fbb) {
        final nameOffset = fbb.writeString(object.name);
        fbb.startTable(4);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, nameOffset);
        fbb.addInt64(2, object.price);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object =
            Investigation()
              ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
              ..name = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '')
              ..price = const fb.Int64Reader().vTableGet(
                buffer,
                rootOffset,
                8,
                0,
              );

        return object;
      },
    ),
    Address: obx_int.EntityDefinition<Address>(
      model: _entities[5],
      toOneRelations: (Address object) => [object.patient],
      toManyRelations: (Address object) => {},
      getId: (Address object) => object.id,
      setId: (Address object, int id) {
        object.id = id;
      },
      objectToFB: (Address object, fb.Builder fbb) {
        final townOffset = fbb.writeString(object.town);
        final cityOffset = fbb.writeString(object.city);
        final provinceOffset = fbb.writeString(object.province);
        final countryOffset = fbb.writeString(object.country);
        fbb.startTable(7);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, townOffset);
        fbb.addOffset(2, cityOffset);
        fbb.addOffset(3, provinceOffset);
        fbb.addOffset(4, countryOffset);
        fbb.addInt64(5, object.patient.targetId);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object =
            Address()
              ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
              ..town = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '')
              ..city = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 8, '')
              ..province = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 10, '')
              ..country = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 12, '');
        object.patient.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          14,
          0,
        );
        object.patient.attach(store);
        return object;
      },
    ),
    Contact: obx_int.EntityDefinition<Contact>(
      model: _entities[6],
      toOneRelations: (Contact object) => [object.patient],
      toManyRelations: (Contact object) => {},
      getId: (Contact object) => object.id,
      setId: (Contact object, int id) {
        object.id = id;
      },
      objectToFB: (Contact object, fb.Builder fbb) {
        final countryCodeOffset = fbb.writeString(object.countryCode);
        final mnpOffset = fbb.writeString(object.mnp);
        final phoneCodeOffset = fbb.writeString(object.phoneCode);
        fbb.startTable(6);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, countryCodeOffset);
        fbb.addOffset(2, mnpOffset);
        fbb.addOffset(3, phoneCodeOffset);
        fbb.addInt64(4, object.patient.targetId);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object =
            Contact()
              ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
              ..countryCode = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '')
              ..mnp = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 8, '')
              ..phoneCode = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 10, '');
        object.patient.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          12,
          0,
        );
        object.patient.attach(store);
        return object;
      },
    ),
    Imagery: obx_int.EntityDefinition<Imagery>(
      model: _entities[7],
      toOneRelations: (Imagery object) => [object.patient],
      toManyRelations: (Imagery object) => {},
      getId: (Imagery object) => object.id,
      setId: (Imagery object, int id) {
        object.id = id;
      },
      objectToFB: (Imagery object, fb.Builder fbb) {
        final pathOffset = fbb.writeString(object.path);
        fbb.startTable(4);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, pathOffset);
        fbb.addInt64(2, object.patient.targetId);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object =
            Imagery()
              ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
              ..path = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '');
        object.patient.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          8,
          0,
        );
        object.patient.attach(store);
        return object;
      },
    ),
    Lesion: obx_int.EntityDefinition<Lesion>(
      model: _entities[8],
      toOneRelations: (Lesion object) => [object.patient],
      toManyRelations: (Lesion object) => {},
      getId: (Lesion object) => object.id,
      setId: (Lesion object, int id) {
        object.id = id;
      },
      objectToFB: (Lesion object, fb.Builder fbb) {
        final patternsOffset = fbb.writeString(object.patterns);
        fbb.startTable(4);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, patternsOffset);
        fbb.addInt64(2, object.patient.targetId);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object =
            Lesion()
              ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
              ..patterns = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '');
        object.patient.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          8,
          0,
        );
        object.patient.attach(store);
        return object;
      },
    ),
    Doctor: obx_int.EntityDefinition<Doctor>(
      model: _entities[9],
      toOneRelations: (Doctor object) => [],
      toManyRelations:
          (Doctor object) => {
            obx_int.RelInfo<Doctor>.toMany(400, object.id): object.patients,
          },
      getId: (Doctor object) => object.id,
      setId: (Doctor object, int id) {
        object.id = id;
      },
      objectToFB: (Doctor object, fb.Builder fbb) {
        final nameOffset = fbb.writeString(object.name);
        final descriptionOffset = fbb.writeString(object.description);
        final emailOffset = fbb.writeString(object.email);
        final passwordOffset = fbb.writeString(object.password);
        fbb.startTable(6);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, nameOffset);
        fbb.addOffset(2, descriptionOffset);
        fbb.addOffset(3, emailOffset);
        fbb.addOffset(4, passwordOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object =
            Doctor()
              ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
              ..name = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '')
              ..description = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 8, '')
              ..email = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 10, '')
              ..password = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 12, '');
        obx_int.InternalToManyAccess.setRelInfo<Doctor>(
          object.patients,
          store,
          obx_int.RelInfo<Doctor>.toMany(400, object.id),
        );
        return object;
      },
    ),
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [Duty] entity fields to define ObjectBox queries.
class Duty_ {
  /// See [Duty.id].
  static final id = obx.QueryIntegerProperty<Duty>(_entities[0].properties[0]);

  /// See [Duty.shift].
  static final shift = obx.QueryIntegerProperty<Duty>(
    _entities[0].properties[1],
  );

  /// See [Duty.day].
  static final day = obx.QueryIntegerProperty<Duty>(_entities[0].properties[2]);
}

/// [Patient] entity fields to define ObjectBox queries.
class Patient_ {
  /// See [Patient.id].
  static final id = obx.QueryIntegerProperty<Patient>(
    _entities[1].properties[0],
  );

  /// See [Patient.name].
  static final name = obx.QueryStringProperty<Patient>(
    _entities[1].properties[1],
  );

  /// See [Patient.complaints].
  static final complaints = obx.QueryStringProperty<Patient>(
    _entities[1].properties[2],
  );

  /// See [Patient.management].
  static final management = obx.QueryStringProperty<Patient>(
    _entities[1].properties[3],
  );

  /// See [Patient.diagnosis].
  static final diagnosis = obx.QueryStringProperty<Patient>(
    _entities[1].properties[4],
  );

  /// See [Patient.editing].
  static final editing = obx.QueryBooleanProperty<Patient>(
    _entities[1].properties[5],
  );

  /// See [Patient.gender].
  static final gender = obx.QueryBooleanProperty<Patient>(
    _entities[1].properties[6],
  );

  /// See [Patient.age].
  static final age = obx.QueryDoubleProperty<Patient>(
    _entities[1].properties[7],
  );

  /// See [Patient.timeOfPresentation].
  static final timeOfPresentation = obx.QueryDateProperty<Patient>(
    _entities[1].properties[8],
  );

  /// See [Patient.patientType].
  static final patientType = obx.QueryRelationToOne<Patient, PatientType>(
    _entities[1].properties[9],
  );

  /// See [Patient.examination].
  static final examination = obx.QueryStringProperty<Patient>(
    _entities[1].properties[10],
  );

  /// See [Patient.other].
  static final other = obx.QueryStringProperty<Patient>(
    _entities[1].properties[11],
  );

  /// See [Patient.attended].
  static final attended = obx.QueryBooleanProperty<Patient>(
    _entities[1].properties[12],
  );

  /// See [Patient.createdAt].
  static final createdAt = obx.QueryStringProperty<Patient>(
    _entities[1].properties[13],
  );

  /// See [Patient.dateOfBirth].
  static final dateOfBirth = obx.QueryDateProperty<Patient>(
    _entities[1].properties[14],
  );

  /// See [Patient.password].
  static final password = obx.QueryStringProperty<Patient>(
    _entities[1].properties[15],
  );

  /// See [Patient.email].
  static final email = obx.QueryStringProperty<Patient>(
    _entities[1].properties[16],
  );

  /// See [Patient.address].
  static final address = obx.QueryRelationToOne<Patient, Address>(
    _entities[1].properties[17],
  );

  /// See [Patient.contact].
  static final contact = obx.QueryRelationToOne<Patient, Contact>(
    _entities[1].properties[18],
  );

  /// see [Patient.pictures]
  static final pictures = obx.QueryRelationToMany<Patient, Picture>(
    _entities[1].relations[0],
  );

  /// see [Patient.investigations]
  static final investigations = obx.QueryRelationToMany<Patient, Investigation>(
    _entities[1].relations[1],
  );

  /// see [Patient.images]
  static final images = obx.QueryRelationToMany<Patient, Imagery>(
    _entities[1].relations[2],
  );

  /// see [Patient.lesions]
  static final lesions = obx.QueryBacklinkToMany<Lesion, Patient>(
    Lesion_.patient,
  );
}

/// [PatientType] entity fields to define ObjectBox queries.
class PatientType_ {
  /// See [PatientType.id].
  static final id = obx.QueryIntegerProperty<PatientType>(
    _entities[2].properties[0],
  );

  /// See [PatientType.type].
  static final type = obx.QueryStringProperty<PatientType>(
    _entities[2].properties[1],
  );
}

/// [Picture] entity fields to define ObjectBox queries.
class Picture_ {
  /// See [Picture.id].
  static final id = obx.QueryIntegerProperty<Picture>(
    _entities[3].properties[0],
  );

  /// See [Picture.path].
  static final path = obx.QueryStringProperty<Picture>(
    _entities[3].properties[1],
  );
}

/// [Investigation] entity fields to define ObjectBox queries.
class Investigation_ {
  /// See [Investigation.id].
  static final id = obx.QueryIntegerProperty<Investigation>(
    _entities[4].properties[0],
  );

  /// See [Investigation.name].
  static final name = obx.QueryStringProperty<Investigation>(
    _entities[4].properties[1],
  );

  /// See [Investigation.price].
  static final price = obx.QueryIntegerProperty<Investigation>(
    _entities[4].properties[2],
  );
}

/// [Address] entity fields to define ObjectBox queries.
class Address_ {
  /// See [Address.id].
  static final id = obx.QueryIntegerProperty<Address>(
    _entities[5].properties[0],
  );

  /// See [Address.town].
  static final town = obx.QueryStringProperty<Address>(
    _entities[5].properties[1],
  );

  /// See [Address.city].
  static final city = obx.QueryStringProperty<Address>(
    _entities[5].properties[2],
  );

  /// See [Address.province].
  static final province = obx.QueryStringProperty<Address>(
    _entities[5].properties[3],
  );

  /// See [Address.country].
  static final country = obx.QueryStringProperty<Address>(
    _entities[5].properties[4],
  );

  /// See [Address.patient].
  static final patient = obx.QueryRelationToOne<Address, Patient>(
    _entities[5].properties[5],
  );
}

/// [Contact] entity fields to define ObjectBox queries.
class Contact_ {
  /// See [Contact.id].
  static final id = obx.QueryIntegerProperty<Contact>(
    _entities[6].properties[0],
  );

  /// See [Contact.countryCode].
  static final countryCode = obx.QueryStringProperty<Contact>(
    _entities[6].properties[1],
  );

  /// See [Contact.mnp].
  static final mnp = obx.QueryStringProperty<Contact>(
    _entities[6].properties[2],
  );

  /// See [Contact.phoneCode].
  static final phoneCode = obx.QueryStringProperty<Contact>(
    _entities[6].properties[3],
  );

  /// See [Contact.patient].
  static final patient = obx.QueryRelationToOne<Contact, Patient>(
    _entities[6].properties[4],
  );
}

/// [Imagery] entity fields to define ObjectBox queries.
class Imagery_ {
  /// See [Imagery.id].
  static final id = obx.QueryIntegerProperty<Imagery>(
    _entities[7].properties[0],
  );

  /// See [Imagery.path].
  static final path = obx.QueryStringProperty<Imagery>(
    _entities[7].properties[1],
  );

  /// See [Imagery.patient].
  static final patient = obx.QueryRelationToOne<Imagery, Patient>(
    _entities[7].properties[2],
  );
}

/// [Lesion] entity fields to define ObjectBox queries.
class Lesion_ {
  /// See [Lesion.id].
  static final id = obx.QueryIntegerProperty<Lesion>(
    _entities[8].properties[0],
  );

  /// See [Lesion.patterns].
  static final patterns = obx.QueryStringProperty<Lesion>(
    _entities[8].properties[1],
  );

  /// See [Lesion.patient].
  static final patient = obx.QueryRelationToOne<Lesion, Patient>(
    _entities[8].properties[2],
  );
}

/// [Doctor] entity fields to define ObjectBox queries.
class Doctor_ {
  /// See [Doctor.id].
  static final id = obx.QueryIntegerProperty<Doctor>(
    _entities[9].properties[0],
  );

  /// See [Doctor.name].
  static final name = obx.QueryStringProperty<Doctor>(
    _entities[9].properties[1],
  );

  /// See [Doctor.description].
  static final description = obx.QueryStringProperty<Doctor>(
    _entities[9].properties[2],
  );

  /// See [Doctor.email].
  static final email = obx.QueryStringProperty<Doctor>(
    _entities[9].properties[3],
  );

  /// See [Doctor.password].
  static final password = obx.QueryStringProperty<Doctor>(
    _entities[9].properties[4],
  );

  /// see [Doctor.patients]
  static final patients = obx.QueryRelationToMany<Doctor, Patient>(
    _entities[9].relations[0],
  );
}
